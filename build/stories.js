window.renderTemplate=function(e,o){const n="üëç";let r,d;function a(){let a=[];for(let e=0;e<8;e++)a.push(o.users[e]),a[e].userLabel=e;return a.map((e,a)=>`
                <div class="vote-item flex">
                    <input class="vote-itemRadio" ${function(e){if(e==o.selectedUserId)return"checked"}(e.id,e.userLabel)} name="myVoice" type="radio" value="${e.id}" id='member${e.userLabel}'>
                    <label class="vote-label" for="member${e.userLabel}">
                    <div class="vote-emoji">üëç</div>
                            <img class="vote-avatar" src="${d}${e.avatar}">
                            <div class="vote-name text-a-center">${e.name}</div>
                    </label>
                </div>`)}var t;if(d=375<window.screen.availHeight?"img/2x/":"img/1x/","leaders"===e&&(r=`<div class="leaders flex flex-d-column a-i-center j-c-space-between">
             <div class="leaders-titlesWrapper text-a-center">
                <div class="leaders-title">${o.title}</div>
                <div class="leaders-subtitle">${o.subtitle}</div>
            </div>
            <div class="leaders-columns flex a-i-flex-end">
              ${function(){o.users.sort((e,a)=>Number(a.valueText.replace(/\D+/g,""))-Number(e.valueText.replace(/\D+/g,"")));var a,t=[3,4,2,5,1];let r,i=!0;if("selectedUserId"in o){a=o.selectedUserId,console.log("selectedUserId"in o),console.log("idHolder "+a);for(let e=0;e<3;e++)i=a==o.users[e].id;if(!i)for(let e=0;e<o.users.length;e++)if(console.log(e),o.users[e].id==a){r=o.users[e],console.log(r);break}}for(let e=0;e<o.users.length;e++)o.users[e].positionInTop=e+1,o.users[e].columnNumber=t[e];o.users.sort((e,a)=>e.columnNumber-a.columnNumber);let s=[],l;if(i)for(let e=0;e<5;e++)s.push(o.users[e]),s[e].userLabel=e;else if(!i){s.push(r),s[0].userLabel=0;for(let e=1;e<5;e++)s.push(o.users[e]),s[e].userLabel=e;l=`<div class="leaders-votedUsersWrapper">
                   <div class="leaders-emoji">üëç</div>
                   <img class="leaders-avatar" src='${d}${r.avatar}'>
                   <div class="leaders-name">${r.name}</div>
                   <div class="leaders-commitsRes">${r.valueText}</div>
                   <div class="leaders-underline"></div>
                   <span class="leaders-position">${r.positionInTop}</span>
                   </div>`}return s.map((e,a)=>`<div class="leaders-column text-a-center">
                          <div class="leaders-usersWrapper">
                              <div class="leaders-emoji">${2==a?o.emoji:""}${0==a?n:""}</div>
                              <img class="leaders-avatar" src='${d}${e.avatar}'>
                              <div class="leaders-name">${e.name}</div>
                              <div class="leaders-commits">${e.valueText}</div>
                          </div>
                          <div class="leaders-resultBar flex j-c-space-between flex-d-column">
                              <span class="leaders-position">${e.positionInTop}</span>
                              ${2!=a||i?"":l}
                          </div>
                      </div>`)}().join("")}
            </div>
        </div>`),"vote"===e&&(t=`<svg class="vote-svgButton" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M32 2C15.4315 2 2 15.4315 2 32C2 48.5685 
                            15.4315 62 32 62C48.5685 62 62 48.5685 62 32C62 15.4315 48.5685 2 32 2ZM32 
                            -2.79753e-06C14.3269 -4.34256e-06 4.34256e-06 14.3269 2.79753e-06 32C1.2525e-06 49.6731 14.3269 64 32 64C49.6731 64 64 49.6731 
                            64 32C64 14.3269 49.6731 -1.2525e-06 32 -2.79753e-06ZM4.99999 32C4.99999 17.0883 
                            17.0883 4.99999 32 4.99999C46.9117 4.99999 59 17.0883 59 32C59 46.9117 46.9117 
                            59 32 59C17.0883 59 4.99999 46.9117 4.99999 32ZM38.9393 36.0607C39.5251 36.6464 
                            40.4749 36.6464 41.0607 36.0607C41.6464 35.4749 41.6464 34.5251 41.0607 
                            33.9393L33.0607 25.9393C32.4749 25.3536 31.5251 25.3536 30.9393 25.9393L22.9393 
                            33.9393C22.3536 34.5251 22.3536 35.4749 22.9393 36.0607C23.5251 36.6464 24.4749 36.6464 
                            25.0607 36.0607L32 29.1213L38.9393 36.0607Z"/>
                            </svg>`,r=`<div class="vote flex flex-d-column a-i-center j-c-space-between">
            <div class="vote-titlesWrapper text-a-center">
                <div class="vote-title">${o.title}</div>
                <div class="vote-subtitle">${o.subtitle}</div>
            </div>
            <form class="vote-content">
                <button class="vote-item vote-toggleMembers flex" disabled type="button">${t}</button>
                <button class="vote-item vote-toggleMembers flex" type="button">${t}</button>
                  ${a().join("")}
            </form>
        </div>`),"chart"===e){let s,l;function i(){let a=[],t=null;for(let e=s;e<=l;e++)a.push(o.values[e]),4<=o.values[e].value.toString().length&&null==t&&(t=!0);let r=a[0].value,i=r;for(let e=1;e<a.length;e++)a[e].value>i&&(i=a[e].value),a[e].value<r&&0!=a[e].value&&(r=a[e].value);return a.map(e=>`<div class="chart-container flex flex-d-column a-i-center j-c-flex-end">
                          <div class="chart-value ${t?"chart-bigNumber":""} ${e.hasOwnProperty("active")?"chart-color":""}">
                          ${0==e.value?"":e.value}</div>
                          <div class="chart-column ${e.hasOwnProperty("active")?"active":""}" style="height: ${function(a,t){if(0==a)return 0;{let e=69*(100*a/t)/100;return e.toFixed(2)}}(e.value,i)}%"></div>
                          <div class="chart-index">${e.title}</div>
                        </div>`)}o.values.forEach(function(e,a,t){o.values[a].hasOwnProperty("active")&&(s=a-6,l=a+2)}),r=`<div class="chart flex flex-d-column a-i-center j-c-space-between">
                <div class="chart-titlesWrapper text-a-center">
                    <div class="chart-title">${o.title}</div>
                    <div class="chart-subtitle">${o.subtitle}</div>
                </div>
                <div class="chart-columns flex a-i-flex-end j-c-space-between">
                    ${i().join("")}
                </div>
                <div class="chart-leaders flex j-c-space-between">
                    <div class="chart-user flex">
                        <img class="chart-avatar" src='${d}${o.users[0].avatar}'>
                        <div class="chart-usersInfo">
                            <div class="chart-name">${o.users[0].name}</div>
                            <div class="chart-count">${o.users[0].valueText}</div>
                        </div>
                    </div>
                    <div class="chart-separator"></div>
                    <div class="chart-user flex">
                        <img class="chart-avatar" src='${d}${o.users[1].avatar}'>
                        <div class="chart-usersInfo">
                            <div class="chart-name">${o.users[1].name}</div>
                            <div class="chart-count">${o.users[1].valueText}</div>
                        </div>
                    </div>
                </div>
            </div>`}if("activity"===e){const y=["var(--svg-min-col)","var(--svg-mid-col)","var(--svg-max-col)","var(--svg-extra-col)"];let e=[];function s(a){let t=0,r=t;for(var i in a){e.push(a[i]);for(let e=0;e<a[i].length;e++)a[i][e]>=r&&(r=a[i][e]),a[i][e]<=t&&(t=a[i][e])}return 0==t&&(t=1),{min:t,max:r}}let t={};for(var l in o.data){let a=[];for(let e=0;e<o.data[l].length;e+=2)a.push(o.data[l][e]+o.data[l][e+1]);t[`${l}`]=a}function c(a,t){let r=[],i=[];for(let e=a;e<=t;e++)r.push(e);let e=r.length;for(;e%3!=0;)e--;if(e%3==0){var s=e/3;let a=0,t=s-1;for(let e=0;e<2;e++)i.push([r[a],r[t]]),a+=s,t+=s;i.push([r[a],r[r.length-1]])}return{min:0,mid:i[0],max:i[1],extra:i[2]}}const B={horizontal:c(s(t).min,s(t).max),vertical:c(s(o.data).min,s(o.data).max)};function f(e){return 0==e?{src:y[0],class:"min",sizeH:{h:2.125,w:2.125,correctPos:0},sizeV:{h:2.688,w:2.688,correctPos:0}}:e>=B.horizontal.mid[0]&&e<=B.horizontal.mid[1]||e>=B.vertical.mid[0]&&e<=B.horizontal.mid[1]?{src:y[1],class:"mid",sizeH:{h:2.563,w:2.125,correctPos:-.5},sizeV:{h:3.375,w:2.734,correctPos:-.625}}:e>=B.horizontal.max[0]&&e<=B.horizontal.max[1]||e>=B.vertical.max[0]&&e<=B.vertical.max[1]?{src:y[2],class:"max",sizeH:{h:3.563,w:2.125,correctPos:-1.5},sizeV:{h:4.625,w:2.688,correctPos:-1.938}}:e>=B.horizontal.extra[0]&&e<=B.horizontal.extra[1]||e>=B.vertical.extra[0]&&e<=B.vertical.extra[1]?{src:y[3],class:"extra",sizeH:{h:4.563,w:2.125,correctPos:-2.5},sizeV:{h:5.938,w:2.688,correctPos:-3.188}}:void 0}let a=[];for(var u in o.data)a.push([u,o.data[u],t[u]]);r=`<div class="activity flex flex-d-column a-i-center j-c-space-between">
                <div class="activity-titlesWrapper text-a-center">
                    <div class="activity-title">${o.title}</div>
                    <div class="activity-subtitle">${o.subtitle}</div>
                </div>
                <div class="activity-heatMap">
             ${function(){let r=0;return a.map((e,t)=>`<div class="activity-${e[0]} activity-dayOfWeek">

                            <div class="activity-12hoursA">
                                ${e[1].map((e,a)=>{if(a%2==0)return r-=7,`<div class="activity-item">
                                              <div class="activity-img activity-${f(e).class}"
                                                   style="top: ${f(e).sizeV.correctPos}rem;
                                                   width: ${f(e).sizeV.w}rem;
                                                   height: ${f(e).sizeV.h}rem;
                                                   z-index: ${a}; background: ${f(e).src} no-repeat;
                                                   background-size: cover;"></div></div>`}).join("")}</div>
                            <div class="activity-12hoursB">
                                ${e[1].map((e,a)=>{if(a%2!=0)return r-=7,`<div class="activity-item">
                                              <div class="activity-img activity-${f(e).class}"
                                                   style="top: ${f(e).sizeV.correctPos}rem;
                                                   width: ${f(e).sizeV.w}rem; 
                                                   height: ${f(e).sizeV.h}rem; 
                                                   z-index: ${a}; background: ${f(e).src} no-repeat; 
                                                   background-size: cover;"></div></div>`}).join("")}</div>
                            <div class="activity-24hours flex j-c-center">
                                ${e[2].map((e,a)=>`<div class="activity-item">
                                                <div class="activity-img activity-${f(e).class}"
                                                    style="top: ${f(e).sizeH.correctPos}rem;
                                                    background: ${f(e).src} no-repeat; 
                                                    width: ${f(e).sizeH.w}rem; height: ${f(e).sizeH.h}rem;
                                                    z-index: ${t}; background-size: contain; "></div></div>`).join("")}
                                                </div>
                                              </div>`).join("")}()}
                </div>
                <div class="activity-legend flex j-c-space-between text-a-center">
                    <div class="activity-time">
                    <div class="activity-timeBar"></div>
                    <span class="activity-2HoursScale">2 —á–∞—Å–∞</span>
                    <span class="activity-1HoursScale">1 —á–∞—Å</span>
                    </div>
                    <div class="activity-zeroHours">
                        <div class="activity-minBar"></div>
                        <span class="activity-1HoursScale">${B.vertical.min}</span>
                        <span class="activity-2HoursScale">${B.horizontal.min}</span>
                    </div>
                    <div class="activity-firstInterval">
                        <div class="activity-midBar"></div>
                        <span class="activity-1HoursScale">${B.vertical.mid[0]} ‚Äî ${B.vertical.mid[1]}</span>
                        <span class="activity-2HoursScale">${B.horizontal.mid[0]} ‚Äî ${B.horizontal.mid[1]}</span>
                    </div>
                    <div class="activity-secondInterval">
                        <div class="activity-maxBar"></div>
                        <span class="activity-1HoursScale">${B.vertical.max[0]} ‚Äî ${B.vertical.max[1]}</span>
                        <span class="activity-2HoursScale">${B.horizontal.max[0]} ‚Äî ${B.horizontal.max[1]}</span>
                    </div>
                    <div class="activity-thirdInterval">
                        <div class="activity-extraBar"></div>
                        <span class="activity-1HoursScale">${B.vertical.extra[0]} ‚Äî ${B.vertical.extra[1]}</span>
                        <span class="activity-2HoursScale">${B.horizontal.extra[0]} ‚Äî ${B.horizontal.extra[1]}</span>
                    </div>
                </div>
            </div>`}if("diagram"==e){var p=Math.round(641.51320892),v=p/360,m=p-4*v*2,h=Number(o.totalText.replace(/\D+/g,""));let a=[];for(let e=0;e<o.categories.length;e++)a.push({...o.categories[e],valueTextN:o.categories[e].valueText.replace(/\D+/g,""),differenceTextN:o.categories[e].differenceText.replace(/\D+/g,"")});var x,g=p/4;let t;for(let e=0;e<a.length;e++)t=0,x=Number(a[e].valueText.replace(/\D+/g,"")),a[e].percentPart=Number(x/h*100),a[e].sectionLength=Number(m*a[e].percentPart/100),0==e&&(a[e].initialOffsetEl=g,t=g+a[e].sectionLength),0!==e&&(t=a[e-1].initialOffsetEl+a[e].sectionLength+2*v,a[e].initialOffsetEl=t,t=0),a[e].dashArrayValues={first:a[e].sectionLength,second:p-a[e].sectionLength};e=`<svg class="diagram-svg" viewBox="0 0 262 262" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g filter="var(--filter1)">
            <circle cx="132" cy="132" r="102.1" fill="transparent" stroke="var(--paint2)" stroke-width="35.9" opacity="var(--opacity_1)"
                    stroke-dasharray="${a[3].dashArrayValues.first} ${a[3].dashArrayValues.second}" 
                    stroke-dashoffset="${a[3].initialOffsetEl}"></circle>
        </g>
        <g filter="var(--filter2)">
            <circle cx="132" cy="132" r="102.1" fill="transparent" stroke="var(--paint2)" stroke-width="35.9" opacity="var(--opacity_2)"
                    stroke-dasharray="${a[2].dashArrayValues.first} ${a[2].dashArrayValues.second}" 
                    stroke-dashoffset="${a[2].initialOffsetEl}"></circle>
        </g>
        <g filter="var(--filter3)">
            <circle cx="132" cy="132" r="102.1" fill="transparent" stroke="var(--paint3)" stroke-width="35.9" opacity="var(--opacity_3)"
                    stroke-dasharray="${a[0].dashArrayValues.first} ${a[0].dashArrayValues.second}" 
                    stroke-dashoffset="${a[0].initialOffsetEl}"></circle>
        </g>
        <g filter=var(--filter0)>
            <circle cx="132" cy="132" r="102.1" fill="transparent" stroke="var(--paint0)" stroke-width="35.9" opacity="var(--opacity_0)"
                    stroke-dasharray="${a[1].dashArrayValues.first} ${a[1].dashArrayValues.second}" 
                    stroke-dashoffset="${a[1].initialOffsetEl}"></circle>
        </g>
        <defs>
            <filter id="filter0_dii_dark" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"></feColorMatrix>
                <feMorphology radius="8" operator="erode" in="SourceAlpha" result="effect1_dropShadow"></feMorphology>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="10"></feGaussianBlur>
                <feColorMatrix type="matrix" values="0 0 0 0 0.575 0 0 0 0 0.365803 0 0 0 0 0 0 0 0 0.2 0"></feColorMatrix>
                <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"></feBlend>
                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"></feBlend>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="10"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite>
                <feColorMatrix type="matrix" values="0 0 0 0 0.791667 0 0 0 0 0.504028 0 0 0 0 0 0 0 0 0.9 0"></feColorMatrix>
                <feBlend mode="normal" in2="shape" result="effect2_innerShadow"></feBlend>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
                <feOffset dx="-1" dy="1"></feOffset>
                <feGaussianBlur stdDeviation="0.5"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite>
                <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"></feColorMatrix>
                <feBlend mode="normal" in2="effect2_innerShadow" result="effect3_innerShadow"></feBlend>
            </filter>
            <filter id="filter1_dii_dark" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"></feColorMatrix>
                <feMorphology radius="8" operator="erode" in="SourceAlpha" result="effect1_dropShadow"></feMorphology>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="10"></feGaussianBlur>
                <feColorMatrix type="matrix" values="0 0 0 0 0.375 0 0 0 0 0.375 0 0 0 0 0.375 0 0 0 0.2 0"></feColorMatrix>
                <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"></feBlend>
                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"></feBlend>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="10"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite>
                <feColorMatrix type="matrix" values="0 0 0 0 0.15 0 0 0 0 0.15 0 0 0 0 0.15 0 0 0 0.9 0"></feColorMatrix>
                <feBlend mode="normal" in2="shape" result="effect2_innerShadow"></feBlend>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
                <feOffset dx="-1" dy="1"></feOffset>
                <feGaussianBlur stdDeviation="0.5"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite>
                <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"></feColorMatrix>
                <feBlend mode="normal" in2="effect2_innerShadow" result="effect3_innerShadow"></feBlend>
            </filter>
            <filter id="filter2_dii_dark" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"></feColorMatrix>
                <feMorphology radius="8" operator="erode" in="SourceAlpha" result="effect1_dropShadow"></feMorphology>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="10"></feGaussianBlur>
                <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0"></feColorMatrix>
                <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"></feBlend>
                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"></feBlend>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="10"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite>
                <feColorMatrix type="matrix" values="0 0 0 0 0.545833 0 0 0 0 0.545833 0 0 0 0 0.545833 0 0 0 0.9 0"></feColorMatrix>
                <feBlend mode="normal" in2="shape" result="effect2_innerShadow"></feBlend>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
                <feOffset dx="-1" dy="1"></feOffset>
                <feGaussianBlur stdDeviation="0.5"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite>
                <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"></feColorMatrix>
                <feBlend mode="normal" in2="effect2_innerShadow" result="effect3_innerShadow"></feBlend>
            </filter>
            <filter id="filter3_dii_dark" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"></feColorMatrix>
                <feMorphology radius="8" operator="erode" in="SourceAlpha" result="effect1_dropShadow"></feMorphology>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="10"></feGaussianBlur>
                <feColorMatrix type="matrix" values="0 0 0 0 0.972549 0 0 0 0 0.618715 0 0 0 0 0 0 0 0 0.2 0"></feColorMatrix>
                <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"></feBlend>
                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"></feBlend>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="10"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite>
                <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 0.636666 0 0 0 0 0 0 0 0 0.9 0"></feColorMatrix>
                <feBlend mode="normal" in2="shape" result="effect2_innerShadow"></feBlend>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
                <feOffset dx="-1" dy="1"></feOffset>
                <feGaussianBlur stdDeviation="0.5"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"></feComposite>
                <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"></feColorMatrix>
                <feBlend mode="normal" in2="effect2_innerShadow" result="effect3_innerShadow"></feBlend>
            </filter>
        
            <filter id="filter0_ii_light"  filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix"/>
            <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
            <feOffset/>
            <feGaussianBlur stdDeviation="10"/>
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
            <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 0.69 0 0 0 0 0.225 0 0 0 0.4 0"/>
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow"/>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
            <feOffset dx="-1" dy="1"/>
            <feGaussianBlur stdDeviation="0.5"/>
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
            <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"/>
            <feBlend mode="normal" in2="effect1_innerShadow" result="effect2_innerShadow"/>
            </filter>
            <filter id="filter1_ii_light"  filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix"/>
            <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
            <feOffset/>
            <feGaussianBlur stdDeviation="10"/>
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
            <feColorMatrix type="matrix" values="0 0 0 0 0.5125 0 0 0 0 0.5125 0 0 0 0 0.5125 0 0 0 0.6 0"/>
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow"/>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
            <feOffset dx="-1" dy="1"/>
            <feGaussianBlur stdDeviation="0.5"/>
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
            <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"/>
            <feBlend mode="normal" in2="effect1_innerShadow" result="effect2_innerShadow"/>
            </filter>
            <filter id="filter2_ii_light" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix"/>
            <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
            <feOffset/>
            <feGaussianBlur stdDeviation="10"/>
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
            <feColorMatrix type="matrix" values="0 0 0 0 0.4125 0 0 0 0 0.4125 0 0 0 0 0.4125 0 0 0 0.2 0"/>
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow"/>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
            <feOffset dx="-1" dy="1"/>
            <feGaussianBlur stdDeviation="0.5"/>
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
            <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"/>
            <feBlend mode="normal" in2="effect1_innerShadow" result="effect2_innerShadow"/>
            </filter>
            <filter id="filter3_ii_light" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix"/>
            <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
            <feOffset/>
            <feGaussianBlur stdDeviation="10"/>
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
            <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 0.69 0 0 0 0 0.225 0 0 0 0.9 0"/>
            <feBlend mode="normal" in2="shape" result="effect1_innerShadow"/>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
            <feOffset dx="-1" dy="1"/>
            <feGaussianBlur stdDeviation="0.5"/>
            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
            <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"/>
            <feBlend mode="normal" in2="effect1_innerShadow" result="effect2_innerShadow"/>
            </filter>
            <radialGradient id="paint0_radial_light" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(163.486 164.514) rotate(90) scale(163.486)">
            <stop offset="0.8125" stop-color="#FFB800" stop-opacity="0.4"/>
            <stop offset="1" stop-color="#FFEF99" stop-opacity="0.2"/>
            </radialGradient>
            <radialGradient id="paint1_radial_light" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(163.486 164.514) rotate(90) scale(163.486)">
            <stop offset="0.828125" stop-color="#BFBFBF" stop-opacity="0.69"/>
            <stop offset="0.921875" stop-color="#E4E4E4" stop-opacity="0.2"/>
            </radialGradient>
            <radialGradient id="paint2_radial_light" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(163.486 164.514) rotate(90) scale(163.486)">
            <stop offset="0.828125" stop-color="#A6A6A6" stop-opacity="0.69"/>
            <stop offset="0.921875" stop-color="#CBCBCB" stop-opacity="0.2"/>
            </radialGradient>
            <radialGradient id="paint3_radial_light" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(163.486 164.514) rotate(90) scale(163.486)">
            <stop offset="0.8125" stop-color="#FFB800" stop-opacity="0.7"/>
            <stop offset="1" stop-color="#FFEF99" stop-opacity="0.4"/>
            </radialGradient>
            <radialGradient id="paint0_radial_dark" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(131.624 132.376) rotate(90) scale(119.624)">
                <stop offset="0.729167" stop-color="#633F00"></stop>
                <stop offset="1" stop-color="#0F0900"></stop>
            </radialGradient>
            <radialGradient id="paint1_radial_dark" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(131.624 132.376) rotate(90) scale(119.624)">
                <stop offset="0.71875" stop-color="#4D4D4D"></stop>
                <stop offset="1" stop-color="#382900"></stop>
            </radialGradient>
            <radialGradient id="paint2_radial_dark" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(131.624 132.376) rotate(90) scale(119.624)">
                <stop offset="0.71875" stop-color="#9B9B9B"></stop>
                <stop offset="1" stop-color="#382900"></stop>
            </radialGradient>
            <radialGradient id="paint3_radial_dark" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(131.624 132.376) rotate(90) scale(119.624)">
                <stop offset="0.71875" stop-color="#FFA300"></stop>
                <stop offset="1" stop-color="#5B3A00"></stop>
            </radialGradient>
        </defs>
    </svg>`;r=`<div class="diagram flex flex-d-column a-i-center">
                <div class="diagram-titlesWrapper text-a-center">
                    <div class="diagram-title">${o.title}</div>
                    <div class="diagram-subtitle">${o.subtitle}</div>
                </div>
               <div class="diagram-content flex a-i-center j-c-space-between">
                   <div class="diagram-circle flex">${e}
                      <div class="diagram-textHolder text-a-center">
                           <div class="diagram-totalCommits">${o.totalText}</div>
                           <div class="diagram-fromLast">${o.differenceText}</div>
                      </div>
                   </div>
                   <div class="diagram-legend flex flex-d-column">
                       ${a.map(e=>`<div class="diagram-itemsWrapper flex j-c-space-between">
                                        <div class="diagram-left flex">
                                            <div class="diagram-dot"></div>
                                            <div class="diagram-stringsCount">${e.title}</div>
                                        </div>
                                        <div class="diagram-right flex">
                                            <div class="diagram-delta">+${e.differenceTextN}</div>
                                            <div class="diagram-totalCount">${e.valueTextN}</div>
                                        </div>
                                    </div>`).join("")}             
                  </div>
               </div>
            </div>`}return r};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
